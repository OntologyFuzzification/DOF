% Syntax to define the semantics of the knowledge base:
% Logic for desired semantics: Zadeh or Lukasiewicz 

(define-fuzzy-logic zadeh)

% Truth constants

(define-truth-constant totally 1.0)
(define-truth-constant very 0.8)
(define-truth-constant quite 0.7)
(define-truth-constant moderately 0.6)
(define-truth-constant enough 0.4)
(define-truth-constant little 0.2)

%equivalent concepts 

(equivalent-concepts (NFSNormale) ((disjoint and ((Neutropenie) (NombreGBNormal) (NombreGBMonocytesNormal)
 (NombreGRNormal) (NombreLymphocytesNormal) (NombrePlaquettesNormal) (NombrePNBNormal)  (NombrePNNNormal))  ))
(equivalent-concepts (ResultatFacteurRhumatoideNegatif) ((disjoint and (AntiCCPNegatif) and (ResultatFacteurRhumatoideNegatif)))
(equivalent-concepts (ResultatFacteurRhumatoidePositif) ((disjoint and (AntiCCPPositif) and (ResultatFacteurRhumatoidePositif)))

%Concrete Fuzzy Concepts

(define-fuzzy-concept PR_very_DAS28 right-shoulder(0,10,3.2,5.1)))
(define-fuzzy-concept PR_moderately_DAS28 triangular(0,10,3.2,4.1,5.1))
(define-fuzzy-concept PR_enough_DAS28 triangular(0,10,2.6,2,3.2))
(define-fuzzy-concept PR_enough_DAS28 left-shoulder(0,10,0,2.6))

 
(define-fuzzy-concept CRPNormale triangular(0,20,0,3,6))
(define-fuzzy-concept CRPAnormale right-shoulder(0,20,6,12))) 

(define-fuzzy-concept Neutropenie triangular(0,2000,500,1000,1800))

(define-fuzzy-concept VSNormale left-shoulder(0,100,0,10))
(define-concept VSBase (and Patient (some ResulatVS VSNormale)))

(define-fuzzy-concept VSAnormale triangular(0,100,15,20,25))
(define-concept VSElevee (and Patient (some ResulatVS VSNormale)))


(define-fuzzy-concept VSAnormale triangular(0,100,15,20,25))
(define-concept VSElevee (and Patient (some ResulatVS VSAnormale)))


(define-fuzzy-concept NombreGBNormal triangular(0,10000,3500,6000,10000))
(define-concept NombreGBNormal (and Patient (some NFSNormale NombreGBNormal)))


(define-fuzzy-concept NombreGBMonocytesNormal triangular(0,10000,200,700,1200))
(define-concept NombreGBMonocytesNormal (and Patient (some NFSNormale NombreGBMonocytesNormal)))


(define-fuzzy-concept NombreGRNormal triangular(0,10000000,4000000,4500000,5500000))
(define-concept NombreGRNormal (and Patient (some NFSNormale NombreGRNormal)))


(define-fuzzy-concept NombreLymphocytesNormal triangular(0,10000,1000,2500,4000))
(define-concept NombreLymphocytesNormal (and Patient (some NFSNormale NombreLymphocytesNormal)))


(define-fuzzy-concept NombrePlaquettesNormal triangular(0,1000000,150000,250000,500000))
(define-concept NombrePlaquettesNormal (and Patient (some NFSNormale NombrePlaquettesNormal)))


(define-fuzzy-concept NombrePNBNormal left-shoulder(0,1000,10,200))
(define-concept NombrePNBNormal (and Patient (some NFSNormale NombrePNBNormal)))


(define-fuzzy-concept NombrePNENormal left-shoulder(0,1000,40,500))
(define-concept NombrePNENormal (and Patient (some NFSNormale NombrePNENormal)))


(define-fuzzy-concept NombrePNNAnormal triangular(0,10000,500,1000,1800))
(define-concept NombrePNNAnormal (and Patient (some NFSNormale NombrePNNAnormal)))


(define-fuzzy-concept NombrePNNNormal triangular(0,10000,2000,15000,7500))
(define-concept NombrePNNNormal (and Patient (some NFSNormale NombrePNNNormal)))


(define-fuzzy-concept LessThan18 crisp(0,100,0,18))

(define-concept Minor (and Patient (some age LessThan18)))

(define-concept AboutMinor (and Patient (some age AboutLT18)))


(define-concept Young (and Patient (some age LowAge)))

(define-concept VeryYoung (very Young))

% Concepts and Relations 
(define-primitive-concept Constatation *top* )
(define-primitive-concept Patient *top* )
(define-primitive-concept Constatation NFSAnormale)
(define-primitive-concept Constatation NFSNormale)
(define-primitive-concept Constatation NFSAnormale)
(define-primitive-concept Constatation NFSNormale)

% IN CRISP CASE ALL INSTANTIATIONS HAVE DEGREE OF TRUTH 1 
(instance PAT1 Patient NFSNormal 1.0)
(instance PAT2 Patient  NFSAnormal 1.0)
(instance PAT3 Patient NFSAnormal 1.0 )
(instance PAT4 Patient NFSNormal 1.0 )
 

(instance PAT0 Patient)
(instance PAT01 Patient)
(instance PAT2 Patient)
(instance PAT3 Patient)
(instance PAT4 Patient)
(instance PAT5 Patient)
(instance PAT6 Patient)
(instance PAT7 Patient)
(instance PAT8 Patient)
(instance PAT9 Patient)
(instance PAT10 Patient)
(instance PAT11 Patient)
(instance PAT12 Patient)
(instance PAT13 Patient)
(instance PAT14 Patient)
(instance PAT15 Patient)
(instance PAT16 Patient)
(instance PAT17 Patient)
(instance PAT18 Patient)
(instance PAT19 Patient)
(instance PAT20 Patient)
(instance PAT21 Patient)
(instance PAT22 Patient)
(instance PAT23 Patient)
(instance PAT24 Patient)
(instance PAT25 Patient)
(instance PAT26 Patient)
(instance PAT27 Patient)
(instance PAT28 Patient)
(instance PAT29 Patient)
(instance PAT30 Patient)
(instance PAT31 Patient)
(instance PAT32 Patient)
(instance PAT33 Patient)
(instance PAT34 Patient)
(instance PAT35 Patient)
(instance PAT36 Patient)
(instance PAT37 Patient)
(instance PAT38 Patient)
(instance PAT39 Patient)
(instance PAT40 Patient)
(instance PAT41 Patient)
(instance PAT42 Patient)
(instance PAT43 Patient)
(instance PAT44 Patient)
(instance PAT45 Patient)
(instance PAT46 Patient)
(instance PAT47 Patient)
(instance PAT48 Patient)
(instance PAT49 Patient)
(instance PAT50 Patient)
(instance PAT51 Patient)
(instance PAT52 Patient)
(instance PAT53 Patient)
(instance PAT54 Patient)
(instance PAT55 Patient)
(instance PAT56 Patient)
(instance PAT57 Patient)
(instance PAT58 Patient)
(instance PAT59 Patient)
(instance PAT60 Patient)
(instance PAT61 Patient)
(instance PAT62 Patient)
(instance PAT63 Patient)
(instance PAT64 Patient)
(instance PAT65 Patient)
(instance PAT66 Patient)
(instance PAT67 Patient)
(instance PAT68 Patient)
(instance PAT70 Patient)
(instance PAT71 Patient)
(instance PAT72 Patient)
(instance PAT73 Patient)
(instance PAT74 Patient)
(instance PAT75 Patient)
(instance PAT76 Patient)
(instance PAT77 Patient)
(instance PAT78 Patient)
(instance PAT79 Patient)
(instance PAT80 Patient)
(instance PAT81 Patient)
(instance PAT82 Patient)
(instance PAT83 Patient)
(instance PAT84 Patient)
(instance PAT85 Patient)
(instance PAT86 Patient)
(instance PAT87 Patient)
(instance PAT89 Patient)
(instance PAT90 Patient)
(instance PAT91 Patient)
(instance PAT99 Patient)
(instance PAT93 Patient)
(instance PAT94 Patient)
(instance PAT95 Patient)
(instance PAT96 Patient)
(instance PAT97 Patient)
(instance PAT98 Patient)
(instance PAT99 Patient)

(define-concept antecedent1 (and Patient (some HasConstatation ResultatNFS)))
(define-concept ResultatNFS (and NFSNormal min((Neutropenie) (NombreGBNormal) (NombreGBMonocytesNormal)
 (NombreGRNormal) (NombreLymphocytesNormal) (NombrePlaquettesNormal) (NombrePNBNormal)  (NombrePNNNormal))))
(define-concept consequent1 (and Patient (some HasConstatation ResultatNFS)))

% Implicative Rule (it could be replaced by a Mamdani Rule)
(define-concept Rule1 (implies antecedent1 consequent1 ) )

%Fuzzy Query 
(min-instance? Patient (some HasConstatation NFSNormal))
(Max-instance? Patient (some HasConstatation NombreGBNormal))
(min-instance? Patient (some HasConstatation VSNormal))